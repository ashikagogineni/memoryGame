package memoryGame;

import java.util.Scanner;

public class gameBoard1 {
    private static final String BOARD =
            "0 1 2 3 4\n" +
            "5 6 7 8 9\n" +
            "0 1 2 3 4\n" +
            "5 6 7 8 9";

    private static int score = 0;
    private static final int ROWS = 4;
    private static final int COLS = 5;

    public static void main(String[] args) {
        playGame();
    }

    public static void displayBoard(String board) {
        System.out.println("\nCurrent Board:");
        System.out.println(board);
    }

    public static void playGame() {
        Scanner scanner = new Scanner(System.in);

        while (score < (ROWS * COLS) / 2) {
            String displayBoard = initializeDisplayBoard();
            displayBoard(displayBoard);

            System.out.print("\nEnter the position of the first card (count 123..etc. from the start): ");
            int pos1 = scanner.nextInt();
            displayBoard = flipCards(displayBoard, pos1, true); // Reveal the number in the selected position

            System.out.print("\nEnter the position of the second card (count 123..etc. from the start): ");
            int pos2 = scanner.nextInt();
            displayBoard = flipCards(displayBoard, pos2, true); // Reveal the number in the selected position

            if (cardsMatch(pos1, pos2)) {
                System.out.println("Match! You get a point.");
                score++;
            } else {
                System.out.println("No match. Try again.");
                // If no match, hide the revealed numbers
                displayBoard = flipCards(displayBoard, pos1, false);
                displayBoard = flipCards(displayBoard, pos2, false);
            }
        }

        System.out.println("Congratulations! You've matched all the cards. Your score: " + score);
    }

    public static String initializeDisplayBoard() {
        StringBuilder displayBoard = new StringBuilder();
        for (int i = 0; i < BOARD.length(); i++) {
            char currentChar = BOARD.charAt(i);
            if (Character.isDigit(currentChar)) {
                displayBoard.append("* ");
            } else {
                displayBoard.append(currentChar).append(" ");
            }

            if ((i + 1) % (2 * COLS) == 0) {
                displayBoard.append("\n");
            }
        }
        return displayBoard.toString();
    }

    public static String flipCards(String board, int position, boolean reveal) {
        int row = (position - 1) / COLS;
        int col = (position - 1) % COLS;
        int index = row * (2 * COLS) + col * 2 + 2;

        if (reveal) {
            char cardValue = BOARD.charAt(position * 2 - 2); // Get the number in the selected position
            board = board.substring(0, index) + cardValue + board.substring(index + 1);
        } else {
            // If not revealing, hide the number
            board = board.substring(0, index) + "* " + board.substring(index + 2);
        }

        displayBoard(board);

        return board;
    }

    public static boolean cardsMatch(int pos1, int pos2) {
        return BOARD.charAt((pos1 - 1) * 2) == BOARD.charAt((pos2 - 1) * 2);
    }
}
